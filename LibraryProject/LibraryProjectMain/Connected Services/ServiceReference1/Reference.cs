//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryProjectMain.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="ServiceReference1.ILibraryService")]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/AddUserToDatabase", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/AddUserToDatabaseResponse")]
        bool AddUserToDatabase(string email, string password1, string password2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/AddUserToDatabase", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/AddUserToDatabaseResponse")]
        System.Threading.Tasks.Task<bool> AddUserToDatabaseAsync(string email, string password1, string password2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/IfUserExist", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/IfUserExistResponse")]
        bool IfUserExist(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/IfUserExist", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/IfUserExistResponse")]
        System.Threading.Tasks.Task<bool> IfUserExistAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/AddBookToDatabase", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/AddBookToDatabaseResponse")]
        bool AddBookToDatabase(string title, string author, string type, int price, string currency, int pages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/AddBookToDatabase", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/AddBookToDatabaseResponse")]
        System.Threading.Tasks.Task<bool> AddBookToDatabaseAsync(string title, string author, string type, int price, string currency, int pages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnsBooks", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnsBooksResponse")]
        string[] ReturnsBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnsBooks", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnsBooksResponse")]
        System.Threading.Tasks.Task<string[]> ReturnsBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnBookTypes", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnBookTypesResponse")]
        string[] ReturnBookTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnBookTypes", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnBookTypesResponse")]
        System.Threading.Tasks.Task<string[]> ReturnBookTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnAvailableCurrency", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnAvailableCurrencyResp" +
            "onse")]
        string[] ReturnAvailableCurrency();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnAvailableCurrency", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnAvailableCurrencyResp" +
            "onse")]
        System.Threading.Tasks.Task<string[]> ReturnAvailableCurrencyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/GetPageNumbers", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/GetPageNumbersResponse")]
        int[] GetPageNumbers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/GetPageNumbers", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/GetPageNumbersResponse")]
        System.Threading.Tasks.Task<int[]> GetPageNumbersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/GetAllBooksObject", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/GetAllBooksObjectResponse")]
        LibraryProjectLib.Data.Models.LibraryModels.Book[] GetAllBooksObject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/GetAllBooksObject", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/GetAllBooksObjectResponse")]
        System.Threading.Tasks.Task<LibraryProjectLib.Data.Models.LibraryModels.Book[]> GetAllBooksObjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/GetAllFilteredBooks", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/GetAllFilteredBooksResponse" +
            "")]
        string[] GetAllFilteredBooks(string type, string currency, int minpages, int maxpages, int minprice, int maxprice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/GetAllFilteredBooks", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/GetAllFilteredBooksResponse" +
            "")]
        System.Threading.Tasks.Task<string[]> GetAllFilteredBooksAsync(string type, string currency, int minpages, int maxpages, int minprice, int maxprice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/getUserRole", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/getUserRoleResponse")]
        string getUserRole(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/getUserRole", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/getUserRoleResponse")]
        System.Threading.Tasks.Task<string> getUserRoleAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/AddAdmin", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/AddAdminResponse")]
        void AddAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/AddAdmin", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/AddAdminResponse")]
        System.Threading.Tasks.Task AddAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/LoanBook", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/LoanBookResponse")]
        bool LoanBook(int userid, int bookid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/LoanBook", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/LoanBookResponse")]
        System.Threading.Tasks.Task<bool> LoanBookAsync(int userid, int bookid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnUserID", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnUserIDResponse")]
        int ReturnUserID(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnUserID", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnUserIDResponse")]
        System.Threading.Tasks.Task<int> ReturnUserIDAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnLoanInfo", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnLoanInfoResponse")]
        LibraryProjectLib.Data.Models.LibraryModels.Book[] ReturnLoanInfo(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnLoanInfo", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ReturnLoanInfoResponse")]
        System.Threading.Tasks.Task<LibraryProjectLib.Data.Models.LibraryModels.Book[]> ReturnLoanInfoAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/RemoveBook", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/RemoveBookResponse")]
        void RemoveBook(int bookid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/RemoveBook", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/RemoveBookResponse")]
        System.Threading.Tasks.Task RemoveBookAsync(int bookid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/getLoanObject", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/getLoanObjectResponse")]
        LibraryProjectLib.Data.Models.LibraryModels.Loan getLoanObject(int bookid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/getLoanObject", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/getLoanObjectResponse")]
        System.Threading.Tasks.Task<LibraryProjectLib.Data.Models.LibraryModels.Loan> getLoanObjectAsync(int bookid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ClearUserBooks", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ClearUserBooksResponse")]
        void ClearUserBooks(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/ClearUserBooks", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/ClearUserBooksResponse")]
        System.Threading.Tasks.Task ClearUserBooksAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/FillUserBooks", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/FillUserBooksResponse")]
        void FillUserBooks(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ILibraryService/FillUserBooks", ReplyAction="http://Microsoft.ServiceModel.Samples/ILibraryService/FillUserBooksResponse")]
        System.Threading.Tasks.Task FillUserBooksAsync(int userid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : LibraryProjectMain.ServiceReference1.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.ClientBase<LibraryProjectMain.ServiceReference1.ILibraryService>, LibraryProjectMain.ServiceReference1.ILibraryService {
        
        public LibraryServiceClient() {
        }
        
        public LibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddUserToDatabase(string email, string password1, string password2) {
            return base.Channel.AddUserToDatabase(email, password1, password2);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserToDatabaseAsync(string email, string password1, string password2) {
            return base.Channel.AddUserToDatabaseAsync(email, password1, password2);
        }
        
        public bool IfUserExist(string email, string password) {
            return base.Channel.IfUserExist(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> IfUserExistAsync(string email, string password) {
            return base.Channel.IfUserExistAsync(email, password);
        }
        
        public bool AddBookToDatabase(string title, string author, string type, int price, string currency, int pages) {
            return base.Channel.AddBookToDatabase(title, author, type, price, currency, pages);
        }
        
        public System.Threading.Tasks.Task<bool> AddBookToDatabaseAsync(string title, string author, string type, int price, string currency, int pages) {
            return base.Channel.AddBookToDatabaseAsync(title, author, type, price, currency, pages);
        }
        
        public string[] ReturnsBooks() {
            return base.Channel.ReturnsBooks();
        }
        
        public System.Threading.Tasks.Task<string[]> ReturnsBooksAsync() {
            return base.Channel.ReturnsBooksAsync();
        }
        
        public string[] ReturnBookTypes() {
            return base.Channel.ReturnBookTypes();
        }
        
        public System.Threading.Tasks.Task<string[]> ReturnBookTypesAsync() {
            return base.Channel.ReturnBookTypesAsync();
        }
        
        public string[] ReturnAvailableCurrency() {
            return base.Channel.ReturnAvailableCurrency();
        }
        
        public System.Threading.Tasks.Task<string[]> ReturnAvailableCurrencyAsync() {
            return base.Channel.ReturnAvailableCurrencyAsync();
        }
        
        public int[] GetPageNumbers() {
            return base.Channel.GetPageNumbers();
        }
        
        public System.Threading.Tasks.Task<int[]> GetPageNumbersAsync() {
            return base.Channel.GetPageNumbersAsync();
        }
        
        public LibraryProjectLib.Data.Models.LibraryModels.Book[] GetAllBooksObject() {
            return base.Channel.GetAllBooksObject();
        }
        
        public System.Threading.Tasks.Task<LibraryProjectLib.Data.Models.LibraryModels.Book[]> GetAllBooksObjectAsync() {
            return base.Channel.GetAllBooksObjectAsync();
        }
        
        public string[] GetAllFilteredBooks(string type, string currency, int minpages, int maxpages, int minprice, int maxprice) {
            return base.Channel.GetAllFilteredBooks(type, currency, minpages, maxpages, minprice, maxprice);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllFilteredBooksAsync(string type, string currency, int minpages, int maxpages, int minprice, int maxprice) {
            return base.Channel.GetAllFilteredBooksAsync(type, currency, minpages, maxpages, minprice, maxprice);
        }
        
        public string getUserRole(string email) {
            return base.Channel.getUserRole(email);
        }
        
        public System.Threading.Tasks.Task<string> getUserRoleAsync(string email) {
            return base.Channel.getUserRoleAsync(email);
        }
        
        public void AddAdmin() {
            base.Channel.AddAdmin();
        }
        
        public System.Threading.Tasks.Task AddAdminAsync() {
            return base.Channel.AddAdminAsync();
        }
        
        public bool LoanBook(int userid, int bookid) {
            return base.Channel.LoanBook(userid, bookid);
        }
        
        public System.Threading.Tasks.Task<bool> LoanBookAsync(int userid, int bookid) {
            return base.Channel.LoanBookAsync(userid, bookid);
        }
        
        public int ReturnUserID(string email) {
            return base.Channel.ReturnUserID(email);
        }
        
        public System.Threading.Tasks.Task<int> ReturnUserIDAsync(string email) {
            return base.Channel.ReturnUserIDAsync(email);
        }
        
        public LibraryProjectLib.Data.Models.LibraryModels.Book[] ReturnLoanInfo(int userid) {
            return base.Channel.ReturnLoanInfo(userid);
        }
        
        public System.Threading.Tasks.Task<LibraryProjectLib.Data.Models.LibraryModels.Book[]> ReturnLoanInfoAsync(int userid) {
            return base.Channel.ReturnLoanInfoAsync(userid);
        }
        
        public void RemoveBook(int bookid) {
            base.Channel.RemoveBook(bookid);
        }
        
        public System.Threading.Tasks.Task RemoveBookAsync(int bookid) {
            return base.Channel.RemoveBookAsync(bookid);
        }
        
        public LibraryProjectLib.Data.Models.LibraryModels.Loan getLoanObject(int bookid) {
            return base.Channel.getLoanObject(bookid);
        }
        
        public System.Threading.Tasks.Task<LibraryProjectLib.Data.Models.LibraryModels.Loan> getLoanObjectAsync(int bookid) {
            return base.Channel.getLoanObjectAsync(bookid);
        }
        
        public void ClearUserBooks(int userid) {
            base.Channel.ClearUserBooks(userid);
        }
        
        public System.Threading.Tasks.Task ClearUserBooksAsync(int userid) {
            return base.Channel.ClearUserBooksAsync(userid);
        }
        
        public void FillUserBooks(int userid) {
            base.Channel.FillUserBooks(userid);
        }
        
        public System.Threading.Tasks.Task FillUserBooksAsync(int userid) {
            return base.Channel.FillUserBooksAsync(userid);
        }
    }
}
